{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","className","placeholder","todo","value","onChange","event","target","Button","onClick","collection","doc","id","set","merge","List","ListItem","ListItemAvatar","ListItemText","primary","secondary","classname","Backspace","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","disabled","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59e14732.chunk.js","sourcesContent":["\n\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAPmJEZVP45v7emEOdjjHY7gwsAehltr-8\",\n    authDomain: \"todo-app-20deb.firebaseapp.com\",\n    projectId: \"todo-app-20deb\",\n    storageBucket: \"todo-app-20deb.appspot.com\",\n    messagingSenderId: \"969082781219\",\n    appId: \"1:969082781219:web:7d17ed0b2bec20dd4b3b96\",\n    measurementId: \"G-J9CH6MZL20\"\n});\n\nconst db = firebaseApp.firestore();\n\nexport default db;","import React, { useEffect, useState } from 'react';\nimport './Todo.css';\nimport { List, ListItem, ListItemText, ListItemAvatar, Avatar, Button, Modal,  } from '@material-ui/core';\nimport { Backspace, SettingsInputAntenna } from '@material-ui/icons';\nimport db from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n\n    },\n}));\n\n\nfunction Todo(props) {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [input, setInput] = useState();\n\n    const handleClose = () => {\n        setOpen(true);\n    };\n\n    const updateTodo = () => {\n        db.collection('todos').doc(props.todo.id).set({\n            todo: input\n        }, {merge: true})\n        setOpen(false);\n    }\n    return (\n        <>\n        <Modal \n        open={open}\n        onClose={e => setOpen(false)}\n        >\n            <div className={classes.paper}>\n                \n                <input placeholder={props.todo.todo} value={input} onChange={event => setInput(event.target.value)}/>\n                \n                <Button onClick={updateTodo}>Update</Button>\n            </div>\n        </Modal>\n        <List>\n            <ListItem>\n                <ListItemAvatar>\n                   \n                </ListItemAvatar>\n                <ListItemText primary=\"To do...\" secondary={props.todo.todo} />\n                </ListItem>\n                <div className=\"todo__buttons\">\n                <button classname=\"todo__edit\" onClick={e => setOpen(true)}>Edit</button>\n            \n            <Backspace className=\"todo__delete\" onClick={event => db.collection('todos').doc(props.todo.id).delete()} />\n            </div>\n            \n            \n            \n        </List>\n        </>\n    )\n}\n\nexport default Todo\n","import { Button, Input, InputLabel, FormControl } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport Todo from './Todo';\nimport './App.css';\nimport db from './firebase';\nimport firebase from 'firebase';\n\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    db.collection('todos').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({id: doc.id ,todo: doc.data().todo})))\n    })\n    \n  }, []);\n\n  const addTodo = (event) => {\n    event.preventDefault();\n\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n\n    setTodos([...todos, input]);\n    setInput('');\n\n  }\n  return (\n    <div className=\"App\">\n      <h1>To do App</h1>\n      <form>\n      \n      <FormControl>\n        <InputLabel>Write a To do</InputLabel>\n        <Input value={input} onChange={event => setInput(event.target.value)}/>\n      </FormControl>\n      <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\">Add</Button>\n      \n\n      </form>\n      \n\n      <ul>\n        {todos.map(todo => (\n          <Todo todo={todo} />\n          \n        ))}\n        \n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}